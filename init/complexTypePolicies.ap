//	complexTypePolicies.ap
//
//	(c) 2022 by Andreas Kraft
//	License: BSD 3-Clause License. See the LICENSE file for further details.
//
//	Definitions for oneM2M complex type attributes.

{

	//
	//	Multiple occurences
	//

	"nm": [
		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:mgmtLinkRef",
			"lname": "name",
			"ns": "m2m",
			"type": "string",	// m2m:resourceName
			"car": "1"
		},
		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:contentRef",
			"lname": "name",
			"ns": "m2m",
			"type": "string",	// xs:NCName
			"car": "1"
		}
	],
	"typ": [

		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:geoCoordinates",
			"ns": "m2m",
			"lname": "type",
			"type": "enum",  // m2m:geometryType
			"evalues": [ 1, 2, 3, 4, 5, 6 ],
			"car": "1"
		},
		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:mgmtLinkRef",
			"lname": "type",
			"ns": "m2m",
			"type": "enum",	// m2m:mgmtDefinition
			"evalues": [ 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1023 ],
			"car": "1"
		}
	],
	"val": [
		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:mgmtLinkRef",
			"lname": "val",
			"ns": "m2m",
			"type": "anyURI",
			"car": "01"
		}
	],

	//
	//	m2m:actionStatus
	//
	"acn": [
		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:actionStatus",
			"lname": "action",
			"ns": "m2m",
			"type": "anyURI",
			"car": "01"
		}
	],
	"sus": [
		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:actionStatus",
			"lname": "status",
			"ns": "m2m",
			"type": "enum",
			"evalues": [ 0, 1, 2, 3 ],
			"car": "01"
		}
	],

	//
	//	m2m:activityPattern
	//
	"se": [
		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:activityPattern",
			"lname": "scheduleElement",
			"ns": "m2m",
			"type": "list",
			"ltype": "string", // ???
			"car": "1"
		}
	],
	"sti": [
		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:activityPattern",
			"lname": "stationaryIndication",
			"ns": "m2m",
			"type": "enum", // m2m:stationaryIndication
			"evalues": [ 1, 2 ],
			"car": "01"
		}
	],
	"dsi": [
		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:activityPattern",
			"lname": "dataSizeIndicator",
			"ns": "m2m",
			"type": "positiveInteger",
			"car": "01"
		}
	],


	//
	//	m2m:batchNotify
	//
	"num": [
		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:batchNotify",
			"lname": "number",
			"ns": "m2m",
			"type": "nonNegInteger",
			"car": "01"
		}
	],
	"dur": [
		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:batchNotify",
			"lname": "duration",			
			"ns": "m2m",
			"type": "duration",
			"car": "01"
		}
	],


	//
	//	m2m:contentRef
	//
	
	// see also "nm" definition above
	
	"uri": [
		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:contentRef",
			"lname": "URI",
			"ns": "m2m",
			"type": "anyURI",
			"car": "1"
		}
	],

	//
	//	m2m:evalCriteria
	//

	"optr": [
		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:evalCriteria",
			"lname": "operator",
			"ns": "m2m",
			"type": "enum",  // m2m:evalCriteriaOperator
			"evalues": [ 1, 2, 3, 4, 5, 6 ],
			"car": "1"
		}
	],
	"sbjt": [
		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:evalCriteria",
			"lname": "subject",
			"ns": "m2m",
			"type": "string", 			// TODO "type": "xs:NCName", 
			"car": "1"
		}
	],
	"thld": [
		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:evalCriteria",
			"lname": "threshold",
			"ns": "m2m",
			"type": "any",
			"car": "1"
		}
	],

	//
	//	m2m:geoCoordinates
	//

	// see also "typ" above

	"crd": [
		{
			"rtypes": [ "COMPLEX" ],
			"ctype": "m2m:geoCoordinates",
			"lname": "coordinates",
			"ns": "m2m",
			"type": "list",		// TODO m2m:listOfCoordinates -> list of list of floats or GeoJSON?
			"ltype": "string",
			"car": "1"
		}
	]

	//
	//	m2m:mgmtLinkRef
	//

	// see also "nm", "val" and "typ" definitions above


}